<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.documentgenerator</groupId>
  <artifactId>documerge-pro</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>DocuMerge Pro</name>
  <description>Professional document generation from Excel/Google Sheets data</description>

  <url>https://github.com/Hey-bhagwan/documerge-pro</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <javafx.version>19</javafx.version>
  </properties>

  <profiles>
    <!-- Windows Profile -->
    <profile>
      <id>windows</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.panteleyev</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <version>1.6.0</version>
            <configuration>
              <name>DocuMerge Pro</name>
              <appVersion>1.0</appVersion>
              <vendor>UncharteD</vendor>
              <destination>target/dist</destination>
              <input>target</input>
              <mainJar>documerge-pro-1.0-SNAPSHOT.jar</mainJar>
              <mainClass>com.documentgenerator.MainApp</mainClass>
              <javaOptions>
                <option>-Dfile.encoding=UTF-8</option>
                <!-- ✅ CONSISTENT: Use classpath approach for all platforms -->
                <option>-cp</option>
                <option>documerge-pro-1.0-SNAPSHOT.jar;lib/*</option>
              </javaOptions>
              <!-- ✅ CORRECTED: No JavaFX modules for non-modular approach -->
              <addModules>
                <addModule>java.base</addModule>
                <addModule>java.desktop</addModule>
                <addModule>java.logging</addModule>
                <addModule>java.net.http</addModule>
              </addModules>
              <!-- Windows-specific options -->
              <winDirChooser>true</winDirChooser>
              <winMenu>true</winMenu>
              <winShortcut>true</winShortcut>
              <winUpgradeUuid>12345678-1234-1234-1234-123456789012</winUpgradeUuid>
              <icon>src/main/resources/icon-64.png</icon>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Linux DEB Package -->
    <profile>
      <id>linux-deb</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.panteleyev</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <version>1.6.0</version>
            <configuration>
              <name>documerge-pro</name>
              <appVersion>1.0</appVersion>
              <vendor>UncharteD</vendor>
              <destination>target/dist</destination>
              <input>target</input>
              <mainJar>documerge-pro-1.0-SNAPSHOT.jar</mainJar>
              <mainClass>com.documentgenerator.MainApp</mainClass>
              <javaOptions>
                <option>-Dfile.encoding=UTF-8</option>
                <!-- ✅ CONSISTENT: Use classpath approach -->
                <option>-cp</option>
                <option>documerge-pro-1.0-SNAPSHOT.jar:lib/*</option>
              </javaOptions>
              <!-- ✅ CONSISTENT: No JavaFX modules -->
              <addModules>
                <addModule>java.base</addModule>
                <addModule>java.desktop</addModule>
                <addModule>java.logging</addModule>
                <addModule>java.net.http</addModule>
              </addModules>
              <!-- ✅ ADDED: Missing Linux-specific options -->
              <linuxPackageName>documerge-pro</linuxPackageName>
              <linuxDebMaintainer>ayushupa29@gmail.com</linuxDebMaintainer>
              <linuxMenuGroup>Office</linuxMenuGroup>
              <linuxShortcut>true</linuxShortcut>
              <icon>src/main/resources/icon-64.png</icon>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- macOS Profile -->
    <profile>
      <id>macos</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.panteleyev</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <version>1.6.0</version>
            <configuration>
              <name>DocuMerge Pro</name>
              <appVersion>1.0</appVersion>
              <vendor>UncharteD</vendor>
              <destination>target/dist</destination>
              <input>target</input>
              <mainJar>documerge-pro-1.0-SNAPSHOT.jar</mainJar>
              <mainClass>com.documentgenerator.MainApp</mainClass>
              <javaOptions>
                <option>-Dfile.encoding=UTF-8</option>
                <!-- ✅ CONSISTENT: Use classpath approach -->
                <option>-cp</option>
                <option>documerge-pro-1.0-SNAPSHOT.jar:lib/*</option>
              </javaOptions>
              <!-- ✅ CORRECTED: No JavaFX modules -->
              <addModules>
                <addModule>java.base</addModule>
                <addModule>java.desktop</addModule>
                <addModule>java.logging</addModule>
                <addModule>java.net.http</addModule>
              </addModules>
              <!-- macOS-specific options -->
              <macPackageIdentifier>com.documentgenerator.documerge</macPackageIdentifier>
              <macPackageName>DocuMerge Pro</macPackageName>
              <macSign>false</macSign>
              <icon>src/main/resources/icon-64.png</icon>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- Rest of your configuration remains the same -->
  <dependencies>
    <!-- Your existing dependencies are perfect -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>5.2.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>5.2.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-scratchpad</artifactId>
      <version>5.2.4</version>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-sheets</artifactId>
      <version>v4-rev20220927-2.0.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.auth</groupId>
      <artifactId>google-auth-library-oauth2-http</artifactId>
      <version>1.37.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.auth</groupId>
      <artifactId>google-auth-library-credentials</artifactId>
      <version>1.37.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>2.0.0</version>
    </dependency>
  </dependencies>

  <build>
    <!-- Your build configuration is good -->
    <pluginManagement>
      <!-- Your existing pluginManagement is perfect -->
    </pluginManagement>

    <plugins>
      <!-- Your existing plugins are correct -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <configuration>
          <mainClass>com.documentgenerator.MainApp</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>com.documentgenerator.MainApp</mainClass>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <outputDirectory>target/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- ✅ CORRECTED: Default configuration matches working approach -->
      <plugin>
        <groupId>org.panteleyev</groupId>
        <artifactId>jpackage-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <name>DocuMerge Pro</name>
          <appVersion>1.0</appVersion>
          <vendor>UncharteD</vendor>
          <destination>target/dist</destination>
          <input>target</input>
          <mainJar>documerge-pro-1.0-SNAPSHOT.jar</mainJar>
          <mainClass>com.documentgenerator.MainApp</mainClass>
          <javaOptions>
            <option>-Dfile.encoding=UTF-8</option>
            <!-- ✅ CONSISTENT: Classpath approach -->
            <option>-cp</option>
            <option>documerge-pro-1.0-SNAPSHOT.jar:lib/*</option>
          </javaOptions>
          <!-- ✅ CORRECTED: Only JDK modules, no JavaFX modules -->
          <addModules>
            <addModule>java.base</addModule>
            <addModule>java.desktop</addModule>
            <addModule>java.logging</addModule>
            <addModule>java.net.http</addModule>
          </addModules>
          <icon>src/main/resources/icon-64.png</icon>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
